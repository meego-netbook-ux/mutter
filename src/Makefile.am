lib_LTLIBRARIES = libmetacity-private.la

SUBDIRS=wm-tester tools themes

if WITH_CLUTTER
SUBDIRS += compositor/mutter/plugins
endif

INCLUDES=@METACITY_CFLAGS@ -I $(srcdir)/include -I$(srcdir)/compositor -DMETACITY_LIBEXECDIR=\"$(libexecdir)\" -DHOST_ALIAS=\"@HOST_ALIAS@\" -DMETACITY_LOCALEDIR=\"$(prefix)/@DATADIRNAME@/locale\" -DMETACITY_PKGDATADIR=\"$(pkgdatadir)\" -DMETACITY_DATADIR=\"$(datadir)\" -DG_LOG_DOMAIN=\"metacity\" -DSN_API_NOT_YET_FROZEN=1 -DMETACITY_MAJOR_VERSION=$(METACITY_MAJOR_VERSION) -DMETACITY_MINOR_VERSION=$(METACITY_MINOR_VERSION) -DMETACITY_MICRO_VERSION=$(METACITY_MICRO_VERSION) -DMETACITY_CLUTTER_PLUGIN_API_VERSION=$(METACITY_CLUTTER_PLUGIN_API_VERSION) -DMETACITY_PKGLIBDIR=\"$(pkglibdir)\" -DMUTTER_PLUGIN_DIR=\"@MUTTER_PLUGIN_DIR@\"

metacity_SOURCES= 			\
	core/async-getprop.c			\
	core/async-getprop.h			\
	core/alttabhandler.c			\
	include/alttabhandler.h			\
	core/alttabhandlerdefault.c		\
	include/alttabhandlerdefault.h		\
	core/bell.c				\
	core/bell.h				\
	core/boxes.c				\
	include/boxes.h				\
	compositor/compositor.c			\
	compositor/compositor-private.h		\
	compositor/compositor-xrender.c		\
	compositor/compositor-xrender.h		\
	include/compositor.h			\
	core/constraints.c			\
	core/constraints.h			\
	core/core.c				\
	core/delete.c				\
	core/display.c				\
	core/display-private.h			\
	include/display.h			\
	ui/draw-workspace.c			\
	ui/draw-workspace.h			\
	core/edge-resistance.c			\
	core/edge-resistance.h			\
	core/effects.c				\
	core/effects.h				\
	core/errors.c				\
	include/errors.h			\
	core/eventqueue.c			\
	core/eventqueue.h			\
	core/frame.c				\
	core/frame-private.h			\
	include/frame.h				\
	ui/gradient.c				\
	ui/gradient.h				\
	core/group-private.h			\
	core/group-props.c			\
	core/group-props.h			\
	core/group.c				\
	include/group.h				\
	core/iconcache.c			\
	core/iconcache.h			\
	core/keybindings.c			\
	core/keybindings-private.h		\
	core/main.c				\
	include/main.h				\
	core/metacity-Xatomtype.h		\
	core/place.c				\
	core/place.h				\
	core/prefs.c				\
	include/prefs.h				\
	core/screen.c				\
	core/screen-private.h			\
	include/screen.h			\
	include/types.h                         \
	core/session.c				\
	core/session.h				\
	core/stack.c				\
	core/stack.h				\
	core/util.c				\
	include/util.h				\
	core/window-props.c			\
	core/window-props.h			\
	core/window.c				\
	core/window-private.h			\
	include/window.h			\
	core/workspace.c			\
	core/workspace-private.h		\
	core/xprops.c				\
	include/xprops.h			\
	include/common.h			\
	include/core.h				\
	include/ui.h				\
	inlinepixbufs.h				\
	ui/fixedtip.c				\
	ui/fixedtip.h				\
	ui/frames.c				\
	ui/frames.h				\
	ui/menu.c				\
	ui/menu.h				\
	ui/metaaccellabel.c			\
	ui/metaaccellabel.h			\
	ui/resizepopup.c			\
	include/resizepopup.h			\
	ui/tabpopup.c				\
	include/tabpopup.h				\
	ui/theme-parser.c			\
	ui/theme-parser.h			\
	ui/theme.c				\
	ui/theme.h				\
	ui/themewidget.c			\
	ui/themewidget.h			\
	ui/ui.c					\
	include/all-keybindings.h

if WITH_CLUTTER
metacity_SOURCES += 				\
	compositor/mutter/compositor-mutter.c		\
	compositor/mutter/mutter-shaped-texture.c	\
	compositor/mutter/mutter-shaped-texture.h	\
	compositor/mutter/mutter-plugin-manager.c	\
	compositor/mutter/mutter-plugin-manager.h	\
	compositor/mutter/tidy/tidy-texture-frame.c	\
	compositor/mutter/tidy/tidy-texture-frame.h	\
	compositor/mutter/mutter-module.c		\
	compositor/mutter/mutter-module.h		\
	compositor/mutter/mutter-plugin.c		\
	include/mutter-plugin.h				\
	include/compositor-mutter.h
endif

# by setting libmetacity_private_la_CFLAGS, the files shared with
# metacity proper will be compiled with different names.
libmetacity_private_la_CFLAGS =
libmetacity_private_la_SOURCES=			\
	core/boxes.c				\
	include/boxes.h				\
	ui/gradient.c				\
	ui/gradient.h				\
	core/util.c				\
	include/util.h				\
	include/common.h			\
	ui/preview-widget.c			\
	ui/preview-widget.h			\
	ui/theme-parser.c			\
	ui/theme-parser.h			\
	ui/theme.c				\
	ui/theme.h

libmetacity_private_la_LDFLAGS = -no-undefined
libmetacity_private_la_LIBADD  = @METACITY_LIBS@

libmetacityincludedir = $(includedir)/metacity-1/metacity-private

libmetacityinclude_base_headers =		\
	include/alttabhandler.h			\
	include/boxes.h				\
	ui/gradient.h				\
	include/util.h				\
	include/common.h			\
	ui/preview-widget.h			\
	ui/theme-parser.h			\
	ui/theme.h				\
	include/prefs.h				\
	include/window.h			\
	include/workspace.h			\
	include/compositor.h			\
	include/compositor-mutter.h		\
	include/types.h				\
	include/screen.h			\
	include/display.h			\
	include/group.h				\
	include/keybindings.h			\
	include/mutter-plugin.h

# Excluded from scanning for introspection but installed
libmetacityinclude_extra_headers =		\
	include/atomnames.h

libmetacityinclude_HEADERS =			\
	$(libmetacityinclude_base_headers)	\
	$(libmetacityinclude_extra_headers)

metacity_theme_viewer_SOURCES=  \
	ui/theme-viewer.c

schema_bindings_SOURCES =       \
        core/schema-bindings.c			\
	metacity.schemas.in.in

schema_bindings_LDADD = @METACITY_LIBS@
metacity.schemas.in: schema_bindings ${srcdir}/metacity.schemas.in.in
	@echo Generating keybinding schemas... ${srcdir}/metacity.schemas.in.in
	${builddir}/schema_bindings ${srcdir}/metacity.schemas.in.in ${builddir}/metacity.schemas.in

bin_PROGRAMS=metacity metacity-theme-viewer

api_version = $(METACITY_MAJOR_VERSION).$(METACITY_MINOR_VERSION)

if WITH_INTROSPECTION
# These files are in package-private directories, even though they may be used
# by plugins.  If you're writing a plugin, use g-ir-compiler --add-include-path
# and g-ir-compiler --includedir.
girdir = $(pkglibdir)
gir_DATA = Meta-$(api_version).gir

typelibdir = $(pkglibdir)
typelib_DATA = Meta-$(api_version).typelib

# We need to strip out the attribute that would point back to libmetacity-introspect
# so that libgirepository looks for symbols in the executable instead
Meta-$(api_version).gir: $(G_IR_SCANNER) metacity $(libmetacityinclude_HEADERS) $(metacity_SOURCES)
	$(G_IR_SCANNER)					\
		--namespace=Meta			\
		--nsversion=$(api_version)		\
		--include=GObject-2.0			\
		--include=Gdk-2.0			\
		--include=Gtk-2.0			\
		--include=Clutter-0.9			\
		--pkg=clutter-0.9			\
		--pkg=gtk+-2.0				\
		--include=xfixes-4.0			\
		--program=./metacity			\
		$(filter %.c,$(metacity_SOURCES))	\
		$(libmetacityinclude_base_headers)	\
		$(INCLUDES)				\
		-o $@

Meta-$(api_version).typelib: $(G_IR_COMPILER) Meta-$(api_version).gir
	LD_LIBRARY_PATH=$${LD_LIBRARY_PATH:+$$LD_LIBRARY_PATH:}. $(G_IR_COMPILER) Meta-$(api_version).gir -o $@
endif

EFENCE=
metacity_LDADD=@METACITY_LIBS@ libmetacity-private.la $(EFENCE)
metacity_LDFLAGS=-export-dynamic

metacity_theme_viewer_LDADD= @METACITY_LIBS@ libmetacity-private.la

testboxes_SOURCES=include/util.h core/util.c include/boxes.h core/boxes.c core/testboxes.c
testgradient_SOURCES=ui/gradient.h ui/gradient.c ui/testgradient.c
testasyncgetprop_SOURCES=core/async-getprop.h core/async-getprop.c core/testasyncgetprop.c

noinst_PROGRAMS=testboxes testgradient testasyncgetprop schema_bindings

testboxes_LDADD= @METACITY_LIBS@ libmetacity-private.la
testgradient_LDADD= @METACITY_LIBS@ libmetacity-private.la
testasyncgetprop_LDADD= @METACITY_LIBS@ libmetacity-private.la

@INTLTOOL_DESKTOP_RULE@

desktopfilesdir=$(datadir)/applications
desktopfiles_in_files=metacity.desktop.in
desktopfiles_files=$(desktopfiles_in_files:.desktop.in=.desktop)
desktopfiles_DATA = $(desktopfiles_files)

wmpropertiesdir=$(datadir)/gnome/wm-properties
wmproperties_in_files=metacity-wm.desktop.in
wmproperties_files=$(wmproperties_in_files:.desktop.in=.desktop)
wmproperties_DATA = $(wmproperties_files)

schemadir   = @GCONF_SCHEMA_FILE_DIR@
schema_in_files = metacity.schemas.in
schema_DATA = $(schema_in_files:.schemas.in=.schemas)

@INTLTOOL_XML_NOMERGE_RULE@

xmldir       = @GNOME_KEYBINDINGS_KEYSDIR@
xml_in_files = 50-metacity-desktop-key.xml.in 50-metacity-key.xml.in
xml_DATA     = $(xml_in_files:.xml.in=.xml)

@INTLTOOL_SCHEMAS_RULE@

if GCONF_SCHEMAS_INSTALL
install-data-local:
	GCONF_CONFIG_SOURCE=$(GCONF_SCHEMA_CONFIG_SOURCE) $(GCONFTOOL) --makefile-install-rule $(schema_DATA)
else
install-data-local:
endif

IMAGES=stock_maximize.png stock_minimize.png stock_delete.png
VARIABLES=stock_maximize_data $(srcdir)/stock_maximize.png \
          stock_minimize_data $(srcdir)/stock_minimize.png \
          stock_delete_data $(srcdir)/stock_delete.png

BUILT_SOURCES = inlinepixbufs.h
CLEANFILES = inlinepixbufs.h metacity.desktop metacity-wm.desktop metacity.schemas metacity.schemas.in 50-metacity-desktop-key.xml 50-metacity-key.xml

inlinepixbufs.h: $(IMAGES)
	$(GDK_PIXBUF_CSOURCE) --raw --build-list $(VARIABLES) >$(srcdir)/inlinepixbufs.h

pkgconfigdir = $(libdir)/pkgconfig

pkgconfig_DATA = libmetacity-private.pc metacity-plugins.pc

EXTRA_DIST=$(desktopfiles_files) 	\
	$(wmproperties_files)		\
	$(IMAGES) $(schema_DATA) 	\
	$(desktopfiles_in_files)	\
	$(wmproperties_in_files)	\
	$(schema_in_files)		\
	$(xml_in_files)			\
	libmetacity-private.pc.in	\
	metacity-plugins.pc.in

